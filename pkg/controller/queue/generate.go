// +build ignore

package main

import (
	"fmt"

	"github.com/iancoleman/strcase"
	"github.com/leg100/stok/crdinfo"
	"github.com/leg100/stok/util"
)

func main() {
	for _, c := range crdinfo.Inventory {
		util.GenerateTemplate(c, queueBuilder, fmt.Sprintf("add_%s.go", strcase.ToSnake(c.Name)))
	}
}

var queueBuilder = `// Code generated by go generate; DO NOT EDIT.
package queue

import (
	"context"

	"github.com/leg100/stok/pkg/apis/stok/v1alpha1"
	"github.com/operator-framework/operator-sdk/pkg/status"
	"sigs.k8s.io/controller-runtime/pkg/client"
)

func init() {
	// AddToManagerFuncs is a list of functions to create controllers and add them to a manager.
	AddToQueueFuncs = append(AddToQueueFuncs, {{ .Name | ToCamel }}QueueBuilder)
}

func {{ .Name | ToCamel }}QueueBuilder(cl client.Client, workspace, namespace string) ([]string, error) {
	var queue []string
	cmdList := v1alpha1.{{ .Name | ToCamel }}List{}
	err := cl.List(context.TODO(), &cmdList, client.InNamespace(namespace), client.MatchingLabels{
		"workspace": workspace,
	})
	if err != nil {
		return nil, err
	}

	// filter out completed
	for _, cmd := range cmdList.Items {
		if cmd.CommandStatus.Conditions.IsTrueFor(status.ConditionType("Completed")) {
			continue
		}
		queue = append(queue, cmd.GetName())
	}
	return queue, nil
}
`
