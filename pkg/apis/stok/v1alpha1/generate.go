// +build ignore

package main

import (
	"fmt"

	"github.com/iancoleman/strcase"
	"github.com/leg100/stok/crdinfo"
	"github.com/leg100/stok/util"
)

func main() {
	for k, v := range crdinfo.Inventory {
		util.GenerateTemplate(v, schemas, fmt.Sprintf("%s_types.go", strcase.ToSnake(k)))
	}
}

var schemas = `// Code generated by go generate; DO NOT EDIT.
package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object

// {{ .Kind | ToCamel }} is the Schema for the {{ .APIPlural }} API
// +kubebuilder:subresource:status
// +kubebuilder:resource:path={{ .APIPlural }},scope=Namespaced
// +genclient
type {{ .Kind | ToCamel }} struct {
	metav1.TypeMeta   <backtick>json:",inline"<backtick>
	metav1.ObjectMeta <backtick>json:"metadata,omitempty"<backtick>

	CommandSpec   <backtick>json:"spec,omitempty"<backtick>
	CommandStatus <backtick>json:"status,omitempty"<backtick>
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object

// {{ .Kind | ToCamel }}List contains a list of {{ .Kind | ToCamel }}
type {{ .Kind | ToCamel }}List struct {
	metav1.TypeMeta <backtick>json:",inline"<backtick>
	metav1.ListMeta <backtick>json:"metadata,omitempty"<backtick>
	Items           []{{ .Kind | ToCamel }} <backtick>json:"items"<backtick>
}

func init() {
	SchemeBuilder.Register(&{{ .Kind | ToCamel }}{}, &{{ .Kind | ToCamel }}List{})
}
`
